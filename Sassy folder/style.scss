// this is scss or aka sass (ok me commenting is gonna make this code look sooo long)
// it's visually kinda easy to see the parents and children here
// like for example the body here has 2 children which is <nav> and <main>
// or <main> having 2 children both being <section>
// u can visually see it without having to open html 
// another advantage is that it is a programming version of css
// i dont have to keep typing the same lines of codes repeatedly
// if there's some lines of code that im repeating alot, i can write those lines inside smtg called a function(mixin) and i only have to call the function by typing the name of the function n the computer will type the lines of i wrote inside the function in all the places i called the function
// i can also write a variable($) and use it in many places in the code

body {
    background-color: #04050a;
    color: whitesmoke;
    padding: 0;
    margin: 0;
    display: flex;

    // body's child 1
    nav {
        display: flex;
        flex-direction: column;
        width: fit-content;
        height: calc(100vh - 10px);
        justify-content: space-around;
        padding-left: 10px;

        a {
            color: whitesmoke;
            text-decoration: none;
        }
    }

    // body's child 2
    main {
        display: flex;
        flex-wrap: wrap;
        width: fit-content;
        // that's the max i could go before it hit the scroll option
        // it means that generally it will be fit-content but if the width is too big it will stop at 170% of the view height cuz width is typically longer than height
        max-width: 175vh;
        margin: auto;
        align-self: center;
        justify-content: space-around;
        align-items: center;
        background-color: aqua;
        padding: 20px;
        @media (max-width: 480px) {
            // this media part means all the code i wrote here is only affected if screen width is 480 or below for mobile screen. they are called media queries
            flex-direction: column;
            padding: 0;
        }

        // all sections being selected inside main
        section {
            // since the main layout has 2 children. giving width 50% means it will take half the size
            // so both the sections will be 50% in width and fit inside the main which is 100%
            width: 50%;
            background-color: red;
            // first child inside main and also &:nth-child() is same like section:nth-child()
            &:nth-child(1) {
                img {
                    // keeps the aspect. ig i need some time experimenting sometimes on my own cuz gpt will prompt a 4 line code for no reason but it's ok as long as it works
                    width: 100%;
                    height: auto;
                }
            }
            // second child of main which is selecting a specific section:nth-child(2) inside main only. not all sections in the html
            &:nth-child(2) {
                flex: 1 0;
                padding: 10px;
                button{
                    margin-left: auto;
                    border: none;
                    &:hover {
                        color: black;
                        cursor: pointer;
                    }
                }
            }
        }
    }
}